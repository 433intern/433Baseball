// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomPacket.Proto

#ifndef PROTOBUF_RoomPacket_2eProto__INCLUDED
#define PROTOBUF_RoomPacket_2eProto__INCLUDED

// @@protoc_insertion_point(includes)

namespace RoomPacket {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoomPacket_2eProto();
void protobuf_AssignDesc_RoomPacket_2eProto();
void protobuf_ShutdownFile_RoomPacket_2eProto();

class CS_room_create;
class CS_room_join;
class CS_room_leave;
class CS_request_ingame_start;
class SC_room_create_result;
class SC_room_join_result;
class SC_room_leave_result;
class SC_ingame_start_result;

enum PacketType {
  UNKNOWN = 0,
  CS_ROOM_CREATE = 1,
  CS_ROOM_JOIN = 2,
  CS_ROOM_LEAVE = 3,
  CS_REQUEST_INGAME_START = 4,
  SC_ROOM_CREATE_SUCCESS = 5,
  SC_ROOM_CREATE_FAILED = 6,
  SC_ROOM_JOIN_SUCCESS = 7,
  SC_ROOM_JOIN_FAILED = 8,
  SC_ROOM_LEAVE_SUCCESS = 9,
  SC_ROOM_LEAVE_FAILED = 10
};
bool PacketType_IsValid(int value);
const PacketType PacketType_MIN = UNKNOWN;
const PacketType PacketType_MAX = SC_ROOM_LEAVE_FAILED;
const int PacketType_ARRAYSIZE = PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PacketType_descriptor();
inline const ::std::string& PacketType_Name(PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PacketType_descriptor(), value);
}
inline bool PacketType_Parse(
    const ::std::string& name, PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketType>(
    PacketType_descriptor(), name, value);
}
enum FailSignal {
  NO_EXIST = 0,
  FULL_ROOM = 1,
  EXIST_REPETITION_NUMBER = 2
};
bool FailSignal_IsValid(int value);
const FailSignal FailSignal_MIN = NO_EXIST;
const FailSignal FailSignal_MAX = EXIST_REPETITION_NUMBER;
const int FailSignal_ARRAYSIZE = FailSignal_MAX + 1;

const ::google::protobuf::EnumDescriptor* FailSignal_descriptor();
inline const ::std::string& FailSignal_Name(FailSignal value) {
  return ::google::protobuf::internal::NameOfEnum(
    FailSignal_descriptor(), value);
}
inline bool FailSignal_Parse(
    const ::std::string& name, FailSignal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FailSignal>(
    FailSignal_descriptor(), name, value);
}
// ===================================================================

class CS_room_create : public ::google::protobuf::Message {
 public:
  CS_room_create();
  virtual ~CS_room_create();

  CS_room_create(const CS_room_create& from);

  inline CS_room_create& operator=(const CS_room_create& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_create& default_instance();

  void Swap(CS_room_create* other);

  // implements Message ----------------------------------------------

  CS_room_create* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_create& from);
  void MergeFrom(const CS_room_create& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomNum = 1;
  inline bool has_roomnum() const;
  inline void clear_roomnum();
  static const int kRoomNumFieldNumber = 1;
  inline ::google::protobuf::uint32 roomnum() const;
  inline void set_roomnum(::google::protobuf::uint32 value);

  // optional string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:RoomPacket.CS_room_create)
 private:
  inline void set_has_roomnum();
  inline void clear_has_roomnum();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::uint32 roomnum_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static CS_room_create* default_instance_;
};
// -------------------------------------------------------------------

class CS_room_join : public ::google::protobuf::Message {
 public:
  CS_room_join();
  virtual ~CS_room_join();

  CS_room_join(const CS_room_join& from);

  inline CS_room_join& operator=(const CS_room_join& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_join& default_instance();

  void Swap(CS_room_join* other);

  // implements Message ----------------------------------------------

  CS_room_join* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_join& from);
  void MergeFrom(const CS_room_join& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomNum = 1;
  inline bool has_roomnum() const;
  inline void clear_roomnum();
  static const int kRoomNumFieldNumber = 1;
  inline ::google::protobuf::uint32 roomnum() const;
  inline void set_roomnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoomPacket.CS_room_join)
 private:
  inline void set_has_roomnum();
  inline void clear_has_roomnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 roomnum_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static CS_room_join* default_instance_;
};
// -------------------------------------------------------------------

class CS_room_leave : public ::google::protobuf::Message {
 public:
  CS_room_leave();
  virtual ~CS_room_leave();

  CS_room_leave(const CS_room_leave& from);

  inline CS_room_leave& operator=(const CS_room_leave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_leave& default_instance();

  void Swap(CS_room_leave* other);

  // implements Message ----------------------------------------------

  CS_room_leave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_leave& from);
  void MergeFrom(const CS_room_leave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:RoomPacket.CS_room_leave)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static CS_room_leave* default_instance_;
};
// -------------------------------------------------------------------

class CS_request_ingame_start : public ::google::protobuf::Message {
 public:
  CS_request_ingame_start();
  virtual ~CS_request_ingame_start();

  CS_request_ingame_start(const CS_request_ingame_start& from);

  inline CS_request_ingame_start& operator=(const CS_request_ingame_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_request_ingame_start& default_instance();

  void Swap(CS_request_ingame_start* other);

  // implements Message ----------------------------------------------

  CS_request_ingame_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_request_ingame_start& from);
  void MergeFrom(const CS_request_ingame_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:RoomPacket.CS_request_ingame_start)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static CS_request_ingame_start* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_create_result : public ::google::protobuf::Message {
 public:
  SC_room_create_result();
  virtual ~SC_room_create_result();

  SC_room_create_result(const SC_room_create_result& from);

  inline SC_room_create_result& operator=(const SC_room_create_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_create_result& default_instance();

  void Swap(SC_room_create_result* other);

  // implements Message ----------------------------------------------

  SC_room_create_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_create_result& from);
  void MergeFrom(const SC_room_create_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoomPacket.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::RoomPacket::FailSignal failsignal() const;
  inline void set_failsignal(::RoomPacket::FailSignal value);

  // @@protoc_insertion_point(class_scope:RoomPacket.SC_room_create_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static SC_room_create_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_join_result : public ::google::protobuf::Message {
 public:
  SC_room_join_result();
  virtual ~SC_room_join_result();

  SC_room_join_result(const SC_room_join_result& from);

  inline SC_room_join_result& operator=(const SC_room_join_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_join_result& default_instance();

  void Swap(SC_room_join_result* other);

  // implements Message ----------------------------------------------

  SC_room_join_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_join_result& from);
  void MergeFrom(const SC_room_join_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoomPacket.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::RoomPacket::FailSignal failsignal() const;
  inline void set_failsignal(::RoomPacket::FailSignal value);

  // @@protoc_insertion_point(class_scope:RoomPacket.SC_room_join_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static SC_room_join_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_leave_result : public ::google::protobuf::Message {
 public:
  SC_room_leave_result();
  virtual ~SC_room_leave_result();

  SC_room_leave_result(const SC_room_leave_result& from);

  inline SC_room_leave_result& operator=(const SC_room_leave_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_leave_result& default_instance();

  void Swap(SC_room_leave_result* other);

  // implements Message ----------------------------------------------

  SC_room_leave_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_leave_result& from);
  void MergeFrom(const SC_room_leave_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoomPacket.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::RoomPacket::FailSignal failsignal() const;
  inline void set_failsignal(::RoomPacket::FailSignal value);

  // @@protoc_insertion_point(class_scope:RoomPacket.SC_room_leave_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static SC_room_leave_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_ingame_start_result : public ::google::protobuf::Message {
 public:
  SC_ingame_start_result();
  virtual ~SC_ingame_start_result();

  SC_ingame_start_result(const SC_ingame_start_result& from);

  inline SC_ingame_start_result& operator=(const SC_ingame_start_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ingame_start_result& default_instance();

  void Swap(SC_ingame_start_result* other);

  // implements Message ----------------------------------------------

  SC_ingame_start_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_ingame_start_result& from);
  void MergeFrom(const SC_ingame_start_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoomPacket.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::RoomPacket::FailSignal failsignal() const;
  inline void set_failsignal(::RoomPacket::FailSignal value);

  // @@protoc_insertion_point(class_scope:RoomPacket.SC_ingame_start_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eProto();
  friend void protobuf_AssignDesc_RoomPacket_2eProto();
  friend void protobuf_ShutdownFile_RoomPacket_2eProto();

  void InitAsDefaultInstance();
  static SC_ingame_start_result* default_instance_;
};
// ===================================================================


// ===================================================================

// CS_room_create

// optional uint32 roomNum = 1;
inline bool CS_room_create::has_roomnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_room_create::set_has_roomnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_room_create::clear_has_roomnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_room_create::clear_roomnum() {
  roomnum_ = 0u;
  clear_has_roomnum();
}
inline ::google::protobuf::uint32 CS_room_create::roomnum() const {
  // @@protoc_insertion_point(field_get:RoomPacket.CS_room_create.roomNum)
  return roomnum_;
}
inline void CS_room_create::set_roomnum(::google::protobuf::uint32 value) {
  set_has_roomnum();
  roomnum_ = value;
  // @@protoc_insertion_point(field_set:RoomPacket.CS_room_create.roomNum)
}

// optional string id = 2;
inline bool CS_room_create::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_room_create::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_room_create::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_room_create::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& CS_room_create::id() const {
  // @@protoc_insertion_point(field_get:RoomPacket.CS_room_create.id)
  return *id_;
}
inline void CS_room_create::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:RoomPacket.CS_room_create.id)
}
inline void CS_room_create::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:RoomPacket.CS_room_create.id)
}
inline void CS_room_create::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RoomPacket.CS_room_create.id)
}
inline ::std::string* CS_room_create::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RoomPacket.CS_room_create.id)
  return id_;
}
inline ::std::string* CS_room_create::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CS_room_create::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RoomPacket.CS_room_create.id)
}

// -------------------------------------------------------------------

// CS_room_join

// optional uint32 roomNum = 1;
inline bool CS_room_join::has_roomnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_room_join::set_has_roomnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_room_join::clear_has_roomnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_room_join::clear_roomnum() {
  roomnum_ = 0u;
  clear_has_roomnum();
}
inline ::google::protobuf::uint32 CS_room_join::roomnum() const {
  // @@protoc_insertion_point(field_get:RoomPacket.CS_room_join.roomNum)
  return roomnum_;
}
inline void CS_room_join::set_roomnum(::google::protobuf::uint32 value) {
  set_has_roomnum();
  roomnum_ = value;
  // @@protoc_insertion_point(field_set:RoomPacket.CS_room_join.roomNum)
}

// -------------------------------------------------------------------

// CS_room_leave

// -------------------------------------------------------------------

// CS_request_ingame_start

// -------------------------------------------------------------------

// SC_room_create_result

// optional .RoomPacket.FailSignal failSignal = 1;
inline bool SC_room_create_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_room_create_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_room_create_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_room_create_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::RoomPacket::FailSignal SC_room_create_result::failsignal() const {
  // @@protoc_insertion_point(field_get:RoomPacket.SC_room_create_result.failSignal)
  return static_cast< ::RoomPacket::FailSignal >(failsignal_);
}
inline void SC_room_create_result::set_failsignal(::RoomPacket::FailSignal value) {
  assert(::RoomPacket::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:RoomPacket.SC_room_create_result.failSignal)
}

// -------------------------------------------------------------------

// SC_room_join_result

// optional .RoomPacket.FailSignal failSignal = 1;
inline bool SC_room_join_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_room_join_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_room_join_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_room_join_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::RoomPacket::FailSignal SC_room_join_result::failsignal() const {
  // @@protoc_insertion_point(field_get:RoomPacket.SC_room_join_result.failSignal)
  return static_cast< ::RoomPacket::FailSignal >(failsignal_);
}
inline void SC_room_join_result::set_failsignal(::RoomPacket::FailSignal value) {
  assert(::RoomPacket::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:RoomPacket.SC_room_join_result.failSignal)
}

// -------------------------------------------------------------------

// SC_room_leave_result

// optional .RoomPacket.FailSignal failSignal = 1;
inline bool SC_room_leave_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_room_leave_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_room_leave_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_room_leave_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::RoomPacket::FailSignal SC_room_leave_result::failsignal() const {
  // @@protoc_insertion_point(field_get:RoomPacket.SC_room_leave_result.failSignal)
  return static_cast< ::RoomPacket::FailSignal >(failsignal_);
}
inline void SC_room_leave_result::set_failsignal(::RoomPacket::FailSignal value) {
  assert(::RoomPacket::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:RoomPacket.SC_room_leave_result.failSignal)
}

// -------------------------------------------------------------------

// SC_ingame_start_result

// optional .RoomPacket.FailSignal failSignal = 1;
inline bool SC_ingame_start_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ingame_start_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ingame_start_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ingame_start_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::RoomPacket::FailSignal SC_ingame_start_result::failsignal() const {
  // @@protoc_insertion_point(field_get:RoomPacket.SC_ingame_start_result.failSignal)
  return static_cast< ::RoomPacket::FailSignal >(failsignal_);
}
inline void SC_ingame_start_result::set_failsignal(::RoomPacket::FailSignal value) {
  assert(::RoomPacket::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:RoomPacket.SC_ingame_start_result.failSignal)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RoomPacket

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RoomPacket::PacketType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomPacket::PacketType>() {
  return ::RoomPacket::PacketType_descriptor();
}
template <> struct is_proto_enum< ::RoomPacket::FailSignal> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomPacket::FailSignal>() {
  return ::RoomPacket::FailSignal_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoomPacket_2eProto__INCLUDED
