// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomPacket.Proto

#include "stdafx.h"
// @@protoc_insertion_point(includes)

namespace RoomPacket {

namespace {

const ::google::protobuf::Descriptor* CS_room_create_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_room_create_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_room_join_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_room_join_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_room_leave_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_room_leave_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_request_ingame_start_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_request_ingame_start_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_room_create_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_room_create_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_room_join_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_room_join_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_room_leave_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_room_leave_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_ingame_start_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_ingame_start_result_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PacketType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* FailSignal_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RoomPacket_2eProto() {
  protobuf_AddDesc_RoomPacket_2eProto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RoomPacket.Proto");
  GOOGLE_CHECK(file != NULL);
  CS_room_create_descriptor_ = file->message_type(0);
  static const int CS_room_create_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_create, roomnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_create, id_),
  };
  CS_room_create_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_room_create_descriptor_,
      CS_room_create::default_instance_,
      CS_room_create_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_create, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_create, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_room_create));
  CS_room_join_descriptor_ = file->message_type(1);
  static const int CS_room_join_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_join, roomnum_),
  };
  CS_room_join_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_room_join_descriptor_,
      CS_room_join::default_instance_,
      CS_room_join_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_join, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_join, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_room_join));
  CS_room_leave_descriptor_ = file->message_type(2);
  static const int CS_room_leave_offsets_[1] = {
  };
  CS_room_leave_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_room_leave_descriptor_,
      CS_room_leave::default_instance_,
      CS_room_leave_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_leave, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_room_leave, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_room_leave));
  CS_request_ingame_start_descriptor_ = file->message_type(3);
  static const int CS_request_ingame_start_offsets_[1] = {
  };
  CS_request_ingame_start_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_request_ingame_start_descriptor_,
      CS_request_ingame_start::default_instance_,
      CS_request_ingame_start_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_request_ingame_start, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_request_ingame_start, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_request_ingame_start));
  SC_room_create_result_descriptor_ = file->message_type(4);
  static const int SC_room_create_result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_create_result, failsignal_),
  };
  SC_room_create_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_room_create_result_descriptor_,
      SC_room_create_result::default_instance_,
      SC_room_create_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_create_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_create_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_room_create_result));
  SC_room_join_result_descriptor_ = file->message_type(5);
  static const int SC_room_join_result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_join_result, failsignal_),
  };
  SC_room_join_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_room_join_result_descriptor_,
      SC_room_join_result::default_instance_,
      SC_room_join_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_join_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_join_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_room_join_result));
  SC_room_leave_result_descriptor_ = file->message_type(6);
  static const int SC_room_leave_result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_leave_result, failsignal_),
  };
  SC_room_leave_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_room_leave_result_descriptor_,
      SC_room_leave_result::default_instance_,
      SC_room_leave_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_leave_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_room_leave_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_room_leave_result));
  SC_ingame_start_result_descriptor_ = file->message_type(7);
  static const int SC_ingame_start_result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ingame_start_result, failsignal_),
  };
  SC_ingame_start_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_ingame_start_result_descriptor_,
      SC_ingame_start_result::default_instance_,
      SC_ingame_start_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ingame_start_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ingame_start_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_ingame_start_result));
  PacketType_descriptor_ = file->enum_type(0);
  FailSignal_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RoomPacket_2eProto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_room_create_descriptor_, &CS_room_create::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_room_join_descriptor_, &CS_room_join::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_room_leave_descriptor_, &CS_room_leave::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_request_ingame_start_descriptor_, &CS_request_ingame_start::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_room_create_result_descriptor_, &SC_room_create_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_room_join_result_descriptor_, &SC_room_join_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_room_leave_result_descriptor_, &SC_room_leave_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_ingame_start_result_descriptor_, &SC_ingame_start_result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RoomPacket_2eProto() {
  delete CS_room_create::default_instance_;
  delete CS_room_create_reflection_;
  delete CS_room_join::default_instance_;
  delete CS_room_join_reflection_;
  delete CS_room_leave::default_instance_;
  delete CS_room_leave_reflection_;
  delete CS_request_ingame_start::default_instance_;
  delete CS_request_ingame_start_reflection_;
  delete SC_room_create_result::default_instance_;
  delete SC_room_create_result_reflection_;
  delete SC_room_join_result::default_instance_;
  delete SC_room_join_result_reflection_;
  delete SC_room_leave_result::default_instance_;
  delete SC_room_leave_result_reflection_;
  delete SC_ingame_start_result::default_instance_;
  delete SC_ingame_start_result_reflection_;
}

void protobuf_AddDesc_RoomPacket_2eProto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020RoomPacket.Proto\022\nRoomPacket\"-\n\016CS_roo"
    "m_create\022\017\n\007roomNum\030\001 \001(\r\022\n\n\002id\030\002 \001(\t\"\037\n"
    "\014CS_room_join\022\017\n\007roomNum\030\001 \001(\r\"\017\n\rCS_roo"
    "m_leave\"\031\n\027CS_request_ingame_start\"C\n\025SC"
    "_room_create_result\022*\n\nfailSignal\030\001 \001(\0162"
    "\026.RoomPacket.FailSignal\"A\n\023SC_room_join_"
    "result\022*\n\nfailSignal\030\001 \001(\0162\026.RoomPacket."
    "FailSignal\"B\n\024SC_room_leave_result\022*\n\nfa"
    "ilSignal\030\001 \001(\0162\026.RoomPacket.FailSignal\"D"
    "\n\026SC_ingame_start_result\022*\n\nfailSignal\030\001"
    " \001(\0162\026.RoomPacket.FailSignal*\216\002\n\nPacketT"
    "ype\022\013\n\007UNKNOWN\020\000\022\022\n\016CS_ROOM_CREATE\020\001\022\020\n\014"
    "CS_ROOM_JOIN\020\002\022\021\n\rCS_ROOM_LEAVE\020\003\022\033\n\027CS_"
    "REQUEST_INGAME_START\020\004\022\032\n\026SC_ROOM_CREATE"
    "_SUCCESS\020\005\022\031\n\025SC_ROOM_CREATE_FAILED\020\006\022\030\n"
    "\024SC_ROOM_JOIN_SUCCESS\020\007\022\027\n\023SC_ROOM_JOIN_"
    "FAILED\020\010\022\031\n\025SC_ROOM_LEAVE_SUCCESS\020\t\022\030\n\024S"
    "C_ROOM_LEAVE_FAILED\020\n*F\n\nFailSignal\022\014\n\010N"
    "O_EXIST\020\000\022\r\n\tFULL_ROOM\020\001\022\033\n\027EXIST_REPETI"
    "TION_NUMBER\020\002", 773);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RoomPacket.Proto", &protobuf_RegisterTypes);
  CS_room_create::default_instance_ = new CS_room_create();
  CS_room_join::default_instance_ = new CS_room_join();
  CS_room_leave::default_instance_ = new CS_room_leave();
  CS_request_ingame_start::default_instance_ = new CS_request_ingame_start();
  SC_room_create_result::default_instance_ = new SC_room_create_result();
  SC_room_join_result::default_instance_ = new SC_room_join_result();
  SC_room_leave_result::default_instance_ = new SC_room_leave_result();
  SC_ingame_start_result::default_instance_ = new SC_ingame_start_result();
  CS_room_create::default_instance_->InitAsDefaultInstance();
  CS_room_join::default_instance_->InitAsDefaultInstance();
  CS_room_leave::default_instance_->InitAsDefaultInstance();
  CS_request_ingame_start::default_instance_->InitAsDefaultInstance();
  SC_room_create_result::default_instance_->InitAsDefaultInstance();
  SC_room_join_result::default_instance_->InitAsDefaultInstance();
  SC_room_leave_result::default_instance_->InitAsDefaultInstance();
  SC_ingame_start_result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RoomPacket_2eProto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RoomPacket_2eProto {
  StaticDescriptorInitializer_RoomPacket_2eProto() {
    protobuf_AddDesc_RoomPacket_2eProto();
  }
} static_descriptor_initializer_RoomPacket_2eProto_;
const ::google::protobuf::EnumDescriptor* PacketType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketType_descriptor_;
}
bool PacketType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FailSignal_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FailSignal_descriptor_;
}
bool FailSignal_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CS_room_create::kRoomNumFieldNumber;
const int CS_room_create::kIdFieldNumber;
#endif  // !_MSC_VER

CS_room_create::CS_room_create()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.CS_room_create)
}

void CS_room_create::InitAsDefaultInstance() {
}

CS_room_create::CS_room_create(const CS_room_create& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.CS_room_create)
}

void CS_room_create::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roomnum_ = 0u;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_room_create::~CS_room_create() {
  // @@protoc_insertion_point(destructor:RoomPacket.CS_room_create)
  SharedDtor();
}

void CS_room_create::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void CS_room_create::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_room_create::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_room_create_descriptor_;
}

const CS_room_create& CS_room_create::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

CS_room_create* CS_room_create::default_instance_ = NULL;

CS_room_create* CS_room_create::New() const {
  return new CS_room_create;
}

void CS_room_create::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    roomnum_ = 0u;
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_room_create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.CS_room_create)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 roomNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomnum_)));
          set_has_roomnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.CS_room_create)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.CS_room_create)
  return false;
#undef DO_
}

void CS_room_create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.CS_room_create)
  // optional uint32 roomNum = 1;
  if (has_roomnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomnum(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.CS_room_create)
}

::google::protobuf::uint8* CS_room_create::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.CS_room_create)
  // optional uint32 roomNum = 1;
  if (has_roomnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomnum(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.CS_room_create)
  return target;
}

int CS_room_create::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 roomNum = 1;
    if (has_roomnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roomnum());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_room_create::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_room_create* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_room_create*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_room_create::MergeFrom(const CS_room_create& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomnum()) {
      set_roomnum(from.roomnum());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_room_create::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_room_create::CopyFrom(const CS_room_create& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_room_create::IsInitialized() const {

  return true;
}

void CS_room_create::Swap(CS_room_create* other) {
  if (other != this) {
    std::swap(roomnum_, other->roomnum_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_room_create::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_room_create_descriptor_;
  metadata.reflection = CS_room_create_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_room_join::kRoomNumFieldNumber;
#endif  // !_MSC_VER

CS_room_join::CS_room_join()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.CS_room_join)
}

void CS_room_join::InitAsDefaultInstance() {
}

CS_room_join::CS_room_join(const CS_room_join& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.CS_room_join)
}

void CS_room_join::SharedCtor() {
  _cached_size_ = 0;
  roomnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_room_join::~CS_room_join() {
  // @@protoc_insertion_point(destructor:RoomPacket.CS_room_join)
  SharedDtor();
}

void CS_room_join::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CS_room_join::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_room_join::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_room_join_descriptor_;
}

const CS_room_join& CS_room_join::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

CS_room_join* CS_room_join::default_instance_ = NULL;

CS_room_join* CS_room_join::New() const {
  return new CS_room_join;
}

void CS_room_join::Clear() {
  roomnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_room_join::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.CS_room_join)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 roomNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomnum_)));
          set_has_roomnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.CS_room_join)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.CS_room_join)
  return false;
#undef DO_
}

void CS_room_join::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.CS_room_join)
  // optional uint32 roomNum = 1;
  if (has_roomnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.CS_room_join)
}

::google::protobuf::uint8* CS_room_join::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.CS_room_join)
  // optional uint32 roomNum = 1;
  if (has_roomnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.CS_room_join)
  return target;
}

int CS_room_join::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 roomNum = 1;
    if (has_roomnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roomnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_room_join::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_room_join* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_room_join*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_room_join::MergeFrom(const CS_room_join& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomnum()) {
      set_roomnum(from.roomnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_room_join::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_room_join::CopyFrom(const CS_room_join& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_room_join::IsInitialized() const {

  return true;
}

void CS_room_join::Swap(CS_room_join* other) {
  if (other != this) {
    std::swap(roomnum_, other->roomnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_room_join::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_room_join_descriptor_;
  metadata.reflection = CS_room_join_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CS_room_leave::CS_room_leave()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.CS_room_leave)
}

void CS_room_leave::InitAsDefaultInstance() {
}

CS_room_leave::CS_room_leave(const CS_room_leave& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.CS_room_leave)
}

void CS_room_leave::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_room_leave::~CS_room_leave() {
  // @@protoc_insertion_point(destructor:RoomPacket.CS_room_leave)
  SharedDtor();
}

void CS_room_leave::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CS_room_leave::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_room_leave::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_room_leave_descriptor_;
}

const CS_room_leave& CS_room_leave::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

CS_room_leave* CS_room_leave::default_instance_ = NULL;

CS_room_leave* CS_room_leave::New() const {
  return new CS_room_leave;
}

void CS_room_leave::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_room_leave::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.CS_room_leave)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.CS_room_leave)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.CS_room_leave)
  return false;
#undef DO_
}

void CS_room_leave::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.CS_room_leave)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.CS_room_leave)
}

::google::protobuf::uint8* CS_room_leave::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.CS_room_leave)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.CS_room_leave)
  return target;
}

int CS_room_leave::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_room_leave::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_room_leave* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_room_leave*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_room_leave::MergeFrom(const CS_room_leave& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_room_leave::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_room_leave::CopyFrom(const CS_room_leave& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_room_leave::IsInitialized() const {

  return true;
}

void CS_room_leave::Swap(CS_room_leave* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_room_leave::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_room_leave_descriptor_;
  metadata.reflection = CS_room_leave_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CS_request_ingame_start::CS_request_ingame_start()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.CS_request_ingame_start)
}

void CS_request_ingame_start::InitAsDefaultInstance() {
}

CS_request_ingame_start::CS_request_ingame_start(const CS_request_ingame_start& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.CS_request_ingame_start)
}

void CS_request_ingame_start::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_request_ingame_start::~CS_request_ingame_start() {
  // @@protoc_insertion_point(destructor:RoomPacket.CS_request_ingame_start)
  SharedDtor();
}

void CS_request_ingame_start::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CS_request_ingame_start::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_request_ingame_start::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_request_ingame_start_descriptor_;
}

const CS_request_ingame_start& CS_request_ingame_start::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

CS_request_ingame_start* CS_request_ingame_start::default_instance_ = NULL;

CS_request_ingame_start* CS_request_ingame_start::New() const {
  return new CS_request_ingame_start;
}

void CS_request_ingame_start::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_request_ingame_start::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.CS_request_ingame_start)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.CS_request_ingame_start)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.CS_request_ingame_start)
  return false;
#undef DO_
}

void CS_request_ingame_start::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.CS_request_ingame_start)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.CS_request_ingame_start)
}

::google::protobuf::uint8* CS_request_ingame_start::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.CS_request_ingame_start)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.CS_request_ingame_start)
  return target;
}

int CS_request_ingame_start::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_request_ingame_start::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_request_ingame_start* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_request_ingame_start*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_request_ingame_start::MergeFrom(const CS_request_ingame_start& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_request_ingame_start::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_request_ingame_start::CopyFrom(const CS_request_ingame_start& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_request_ingame_start::IsInitialized() const {

  return true;
}

void CS_request_ingame_start::Swap(CS_request_ingame_start* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_request_ingame_start::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_request_ingame_start_descriptor_;
  metadata.reflection = CS_request_ingame_start_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_room_create_result::kFailSignalFieldNumber;
#endif  // !_MSC_VER

SC_room_create_result::SC_room_create_result()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.SC_room_create_result)
}

void SC_room_create_result::InitAsDefaultInstance() {
}

SC_room_create_result::SC_room_create_result(const SC_room_create_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.SC_room_create_result)
}

void SC_room_create_result::SharedCtor() {
  _cached_size_ = 0;
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_room_create_result::~SC_room_create_result() {
  // @@protoc_insertion_point(destructor:RoomPacket.SC_room_create_result)
  SharedDtor();
}

void SC_room_create_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_room_create_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_room_create_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_room_create_result_descriptor_;
}

const SC_room_create_result& SC_room_create_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

SC_room_create_result* SC_room_create_result::default_instance_ = NULL;

SC_room_create_result* SC_room_create_result::New() const {
  return new SC_room_create_result;
}

void SC_room_create_result::Clear() {
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_room_create_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.SC_room_create_result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RoomPacket.FailSignal failSignal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RoomPacket::FailSignal_IsValid(value)) {
            set_failsignal(static_cast< ::RoomPacket::FailSignal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.SC_room_create_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.SC_room_create_result)
  return false;
#undef DO_
}

void SC_room_create_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.SC_room_create_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->failsignal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.SC_room_create_result)
}

::google::protobuf::uint8* SC_room_create_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.SC_room_create_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->failsignal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.SC_room_create_result)
  return target;
}

int SC_room_create_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .RoomPacket.FailSignal failSignal = 1;
    if (has_failsignal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->failsignal());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_room_create_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_room_create_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_room_create_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_room_create_result::MergeFrom(const SC_room_create_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_failsignal()) {
      set_failsignal(from.failsignal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_room_create_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_room_create_result::CopyFrom(const SC_room_create_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_room_create_result::IsInitialized() const {

  return true;
}

void SC_room_create_result::Swap(SC_room_create_result* other) {
  if (other != this) {
    std::swap(failsignal_, other->failsignal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_room_create_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_room_create_result_descriptor_;
  metadata.reflection = SC_room_create_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_room_join_result::kFailSignalFieldNumber;
#endif  // !_MSC_VER

SC_room_join_result::SC_room_join_result()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.SC_room_join_result)
}

void SC_room_join_result::InitAsDefaultInstance() {
}

SC_room_join_result::SC_room_join_result(const SC_room_join_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.SC_room_join_result)
}

void SC_room_join_result::SharedCtor() {
  _cached_size_ = 0;
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_room_join_result::~SC_room_join_result() {
  // @@protoc_insertion_point(destructor:RoomPacket.SC_room_join_result)
  SharedDtor();
}

void SC_room_join_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_room_join_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_room_join_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_room_join_result_descriptor_;
}

const SC_room_join_result& SC_room_join_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

SC_room_join_result* SC_room_join_result::default_instance_ = NULL;

SC_room_join_result* SC_room_join_result::New() const {
  return new SC_room_join_result;
}

void SC_room_join_result::Clear() {
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_room_join_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.SC_room_join_result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RoomPacket.FailSignal failSignal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RoomPacket::FailSignal_IsValid(value)) {
            set_failsignal(static_cast< ::RoomPacket::FailSignal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.SC_room_join_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.SC_room_join_result)
  return false;
#undef DO_
}

void SC_room_join_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.SC_room_join_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->failsignal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.SC_room_join_result)
}

::google::protobuf::uint8* SC_room_join_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.SC_room_join_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->failsignal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.SC_room_join_result)
  return target;
}

int SC_room_join_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .RoomPacket.FailSignal failSignal = 1;
    if (has_failsignal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->failsignal());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_room_join_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_room_join_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_room_join_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_room_join_result::MergeFrom(const SC_room_join_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_failsignal()) {
      set_failsignal(from.failsignal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_room_join_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_room_join_result::CopyFrom(const SC_room_join_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_room_join_result::IsInitialized() const {

  return true;
}

void SC_room_join_result::Swap(SC_room_join_result* other) {
  if (other != this) {
    std::swap(failsignal_, other->failsignal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_room_join_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_room_join_result_descriptor_;
  metadata.reflection = SC_room_join_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_room_leave_result::kFailSignalFieldNumber;
#endif  // !_MSC_VER

SC_room_leave_result::SC_room_leave_result()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.SC_room_leave_result)
}

void SC_room_leave_result::InitAsDefaultInstance() {
}

SC_room_leave_result::SC_room_leave_result(const SC_room_leave_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.SC_room_leave_result)
}

void SC_room_leave_result::SharedCtor() {
  _cached_size_ = 0;
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_room_leave_result::~SC_room_leave_result() {
  // @@protoc_insertion_point(destructor:RoomPacket.SC_room_leave_result)
  SharedDtor();
}

void SC_room_leave_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_room_leave_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_room_leave_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_room_leave_result_descriptor_;
}

const SC_room_leave_result& SC_room_leave_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

SC_room_leave_result* SC_room_leave_result::default_instance_ = NULL;

SC_room_leave_result* SC_room_leave_result::New() const {
  return new SC_room_leave_result;
}

void SC_room_leave_result::Clear() {
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_room_leave_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.SC_room_leave_result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RoomPacket.FailSignal failSignal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RoomPacket::FailSignal_IsValid(value)) {
            set_failsignal(static_cast< ::RoomPacket::FailSignal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.SC_room_leave_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.SC_room_leave_result)
  return false;
#undef DO_
}

void SC_room_leave_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.SC_room_leave_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->failsignal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.SC_room_leave_result)
}

::google::protobuf::uint8* SC_room_leave_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.SC_room_leave_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->failsignal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.SC_room_leave_result)
  return target;
}

int SC_room_leave_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .RoomPacket.FailSignal failSignal = 1;
    if (has_failsignal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->failsignal());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_room_leave_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_room_leave_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_room_leave_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_room_leave_result::MergeFrom(const SC_room_leave_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_failsignal()) {
      set_failsignal(from.failsignal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_room_leave_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_room_leave_result::CopyFrom(const SC_room_leave_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_room_leave_result::IsInitialized() const {

  return true;
}

void SC_room_leave_result::Swap(SC_room_leave_result* other) {
  if (other != this) {
    std::swap(failsignal_, other->failsignal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_room_leave_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_room_leave_result_descriptor_;
  metadata.reflection = SC_room_leave_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_ingame_start_result::kFailSignalFieldNumber;
#endif  // !_MSC_VER

SC_ingame_start_result::SC_ingame_start_result()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomPacket.SC_ingame_start_result)
}

void SC_ingame_start_result::InitAsDefaultInstance() {
}

SC_ingame_start_result::SC_ingame_start_result(const SC_ingame_start_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomPacket.SC_ingame_start_result)
}

void SC_ingame_start_result::SharedCtor() {
  _cached_size_ = 0;
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_ingame_start_result::~SC_ingame_start_result() {
  // @@protoc_insertion_point(destructor:RoomPacket.SC_ingame_start_result)
  SharedDtor();
}

void SC_ingame_start_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_ingame_start_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ingame_start_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_ingame_start_result_descriptor_;
}

const SC_ingame_start_result& SC_ingame_start_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomPacket_2eProto();
  return *default_instance_;
}

SC_ingame_start_result* SC_ingame_start_result::default_instance_ = NULL;

SC_ingame_start_result* SC_ingame_start_result::New() const {
  return new SC_ingame_start_result;
}

void SC_ingame_start_result::Clear() {
  failsignal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_ingame_start_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomPacket.SC_ingame_start_result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RoomPacket.FailSignal failSignal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RoomPacket::FailSignal_IsValid(value)) {
            set_failsignal(static_cast< ::RoomPacket::FailSignal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomPacket.SC_ingame_start_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomPacket.SC_ingame_start_result)
  return false;
#undef DO_
}

void SC_ingame_start_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomPacket.SC_ingame_start_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->failsignal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomPacket.SC_ingame_start_result)
}

::google::protobuf::uint8* SC_ingame_start_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomPacket.SC_ingame_start_result)
  // optional .RoomPacket.FailSignal failSignal = 1;
  if (has_failsignal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->failsignal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomPacket.SC_ingame_start_result)
  return target;
}

int SC_ingame_start_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .RoomPacket.FailSignal failSignal = 1;
    if (has_failsignal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->failsignal());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ingame_start_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_ingame_start_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_ingame_start_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_ingame_start_result::MergeFrom(const SC_ingame_start_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_failsignal()) {
      set_failsignal(from.failsignal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_ingame_start_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ingame_start_result::CopyFrom(const SC_ingame_start_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ingame_start_result::IsInitialized() const {

  return true;
}

void SC_ingame_start_result::Swap(SC_ingame_start_result* other) {
  if (other != this) {
    std::swap(failsignal_, other->failsignal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_ingame_start_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_ingame_start_result_descriptor_;
  metadata.reflection = SC_ingame_start_result_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RoomPacket

// @@protoc_insertion_point(global_scope)
