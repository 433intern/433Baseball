// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomPacket.proto
#pragma warning (disable : 4996)

#ifndef PROTOBUF_RoomPacket_2eproto__INCLUDED
#define PROTOBUF_RoomPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "GamePacketEnumeration.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoomPacket_2eproto();
void protobuf_AssignDesc_RoomPacket_2eproto();
void protobuf_ShutdownFile_RoomPacket_2eproto();

class RoomInfo;
class CS_contact_alram;
class CS_room_info_request;
class CS_total_room_info_request;
class CS_room_create;
class CS_room_join;
class CS_room_leave;
class CS_request_ingame_start;
class SC_contact_result;
class SC_room_info;
class SC_total_room_info;
class SC_room_create_result;
class SC_room_join_result;
class SC_room_leave_result;
class SC_ingame_start_result;

// ===================================================================

class RoomInfo : public ::google::protobuf::Message {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  RoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomNum = 1;
  inline bool has_roomnum() const;
  inline void clear_roomnum();
  static const int kRoomNumFieldNumber = 1;
  inline ::google::protobuf::uint32 roomnum() const;
  inline void set_roomnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.RoomInfo)
 private:
  inline void set_has_roomnum();
  inline void clear_has_roomnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 roomnum_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class CS_contact_alram : public ::google::protobuf::Message {
 public:
  CS_contact_alram();
  virtual ~CS_contact_alram();

  CS_contact_alram(const CS_contact_alram& from);

  inline CS_contact_alram& operator=(const CS_contact_alram& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_contact_alram& default_instance();

  void Swap(CS_contact_alram* other);

  // implements Message ----------------------------------------------

  CS_contact_alram* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_contact_alram& from);
  void MergeFrom(const CS_contact_alram& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickName = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string securityCode = 2;
  inline bool has_securitycode() const;
  inline void clear_securitycode();
  static const int kSecurityCodeFieldNumber = 2;
  inline const ::std::string& securitycode() const;
  inline void set_securitycode(const ::std::string& value);
  inline void set_securitycode(const char* value);
  inline void set_securitycode(const char* value, size_t size);
  inline ::std::string* mutable_securitycode();
  inline ::std::string* release_securitycode();
  inline void set_allocated_securitycode(::std::string* securitycode);

  // @@protoc_insertion_point(class_scope:protocol.CS_contact_alram)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_securitycode();
  inline void clear_has_securitycode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::std::string* securitycode_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_contact_alram* default_instance_;
};
// -------------------------------------------------------------------

class CS_room_info_request : public ::google::protobuf::Message {
 public:
  CS_room_info_request();
  virtual ~CS_room_info_request();

  CS_room_info_request(const CS_room_info_request& from);

  inline CS_room_info_request& operator=(const CS_room_info_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_info_request& default_instance();

  void Swap(CS_room_info_request* other);

  // implements Message ----------------------------------------------

  CS_room_info_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_info_request& from);
  void MergeFrom(const CS_room_info_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol.CS_room_info_request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_room_info_request* default_instance_;
};
// -------------------------------------------------------------------

class CS_total_room_info_request : public ::google::protobuf::Message {
 public:
  CS_total_room_info_request();
  virtual ~CS_total_room_info_request();

  CS_total_room_info_request(const CS_total_room_info_request& from);

  inline CS_total_room_info_request& operator=(const CS_total_room_info_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_total_room_info_request& default_instance();

  void Swap(CS_total_room_info_request* other);

  // implements Message ----------------------------------------------

  CS_total_room_info_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_total_room_info_request& from);
  void MergeFrom(const CS_total_room_info_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol.CS_total_room_info_request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_total_room_info_request* default_instance_;
};
// -------------------------------------------------------------------

class CS_room_create : public ::google::protobuf::Message {
 public:
  CS_room_create();
  virtual ~CS_room_create();

  CS_room_create(const CS_room_create& from);

  inline CS_room_create& operator=(const CS_room_create& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_create& default_instance();

  void Swap(CS_room_create* other);

  // implements Message ----------------------------------------------

  CS_room_create* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_create& from);
  void MergeFrom(const CS_room_create& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomNum = 1;
  inline bool has_roomnum() const;
  inline void clear_roomnum();
  static const int kRoomNumFieldNumber = 1;
  inline ::google::protobuf::uint32 roomnum() const;
  inline void set_roomnum(::google::protobuf::uint32 value);

  // optional string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:protocol.CS_room_create)
 private:
  inline void set_has_roomnum();
  inline void clear_has_roomnum();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::uint32 roomnum_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_room_create* default_instance_;
};
// -------------------------------------------------------------------

class CS_room_join : public ::google::protobuf::Message {
 public:
  CS_room_join();
  virtual ~CS_room_join();

  CS_room_join(const CS_room_join& from);

  inline CS_room_join& operator=(const CS_room_join& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_join& default_instance();

  void Swap(CS_room_join* other);

  // implements Message ----------------------------------------------

  CS_room_join* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_join& from);
  void MergeFrom(const CS_room_join& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomNum = 1;
  inline bool has_roomnum() const;
  inline void clear_roomnum();
  static const int kRoomNumFieldNumber = 1;
  inline ::google::protobuf::uint32 roomnum() const;
  inline void set_roomnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.CS_room_join)
 private:
  inline void set_has_roomnum();
  inline void clear_has_roomnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 roomnum_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_room_join* default_instance_;
};
// -------------------------------------------------------------------

class CS_room_leave : public ::google::protobuf::Message {
 public:
  CS_room_leave();
  virtual ~CS_room_leave();

  CS_room_leave(const CS_room_leave& from);

  inline CS_room_leave& operator=(const CS_room_leave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_room_leave& default_instance();

  void Swap(CS_room_leave* other);

  // implements Message ----------------------------------------------

  CS_room_leave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_room_leave& from);
  void MergeFrom(const CS_room_leave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol.CS_room_leave)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_room_leave* default_instance_;
};
// -------------------------------------------------------------------

class CS_request_ingame_start : public ::google::protobuf::Message {
 public:
  CS_request_ingame_start();
  virtual ~CS_request_ingame_start();

  CS_request_ingame_start(const CS_request_ingame_start& from);

  inline CS_request_ingame_start& operator=(const CS_request_ingame_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_request_ingame_start& default_instance();

  void Swap(CS_request_ingame_start* other);

  // implements Message ----------------------------------------------

  CS_request_ingame_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_request_ingame_start& from);
  void MergeFrom(const CS_request_ingame_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol.CS_request_ingame_start)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static CS_request_ingame_start* default_instance_;
};
// -------------------------------------------------------------------

class SC_contact_result : public ::google::protobuf::Message {
 public:
  SC_contact_result();
  virtual ~SC_contact_result();

  SC_contact_result(const SC_contact_result& from);

  inline SC_contact_result& operator=(const SC_contact_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_contact_result& default_instance();

  void Swap(SC_contact_result* other);

  // implements Message ----------------------------------------------

  SC_contact_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_contact_result& from);
  void MergeFrom(const SC_contact_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::protocol::FailSignal failsignal() const;
  inline void set_failsignal(::protocol::FailSignal value);

  // @@protoc_insertion_point(class_scope:protocol.SC_contact_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_contact_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_info : public ::google::protobuf::Message {
 public:
  SC_room_info();
  virtual ~SC_room_info();

  SC_room_info(const SC_room_info& from);

  inline SC_room_info& operator=(const SC_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_info& default_instance();

  void Swap(SC_room_info* other);

  // implements Message ----------------------------------------------

  SC_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_info& from);
  void MergeFrom(const SC_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string playerNickNames = 1;
  inline int playernicknames_size() const;
  inline void clear_playernicknames();
  static const int kPlayerNickNamesFieldNumber = 1;
  inline const ::std::string& playernicknames(int index) const;
  inline ::std::string* mutable_playernicknames(int index);
  inline void set_playernicknames(int index, const ::std::string& value);
  inline void set_playernicknames(int index, const char* value);
  inline void set_playernicknames(int index, const char* value, size_t size);
  inline ::std::string* add_playernicknames();
  inline void add_playernicknames(const ::std::string& value);
  inline void add_playernicknames(const char* value);
  inline void add_playernicknames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& playernicknames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_playernicknames();

  // @@protoc_insertion_point(class_scope:protocol.SC_room_info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> playernicknames_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_room_info* default_instance_;
};
// -------------------------------------------------------------------

class SC_total_room_info : public ::google::protobuf::Message {
 public:
  SC_total_room_info();
  virtual ~SC_total_room_info();

  SC_total_room_info(const SC_total_room_info& from);

  inline SC_total_room_info& operator=(const SC_total_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_total_room_info& default_instance();

  void Swap(SC_total_room_info* other);

  // implements Message ----------------------------------------------

  SC_total_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_total_room_info& from);
  void MergeFrom(const SC_total_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomCount = 1;
  inline bool has_roomcount() const;
  inline void clear_roomcount();
  static const int kRoomCountFieldNumber = 1;
  inline ::google::protobuf::uint32 roomcount() const;
  inline void set_roomcount(::google::protobuf::uint32 value);

  // repeated .protocol.RoomInfo roomList = 2;
  inline int roomlist_size() const;
  inline void clear_roomlist();
  static const int kRoomListFieldNumber = 2;
  inline const ::protocol::RoomInfo& roomlist(int index) const;
  inline ::protocol::RoomInfo* mutable_roomlist(int index);
  inline ::protocol::RoomInfo* add_roomlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::RoomInfo >&
      roomlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::RoomInfo >*
      mutable_roomlist();

  // @@protoc_insertion_point(class_scope:protocol.SC_total_room_info)
 private:
  inline void set_has_roomcount();
  inline void clear_has_roomcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::RoomInfo > roomlist_;
  ::google::protobuf::uint32 roomcount_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_total_room_info* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_create_result : public ::google::protobuf::Message {
 public:
  SC_room_create_result();
  virtual ~SC_room_create_result();

  SC_room_create_result(const SC_room_create_result& from);

  inline SC_room_create_result& operator=(const SC_room_create_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_create_result& default_instance();

  void Swap(SC_room_create_result* other);

  // implements Message ----------------------------------------------

  SC_room_create_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_create_result& from);
  void MergeFrom(const SC_room_create_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::protocol::FailSignal failsignal() const;
  inline void set_failsignal(::protocol::FailSignal value);

  // @@protoc_insertion_point(class_scope:protocol.SC_room_create_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_room_create_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_join_result : public ::google::protobuf::Message {
 public:
  SC_room_join_result();
  virtual ~SC_room_join_result();

  SC_room_join_result(const SC_room_join_result& from);

  inline SC_room_join_result& operator=(const SC_room_join_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_join_result& default_instance();

  void Swap(SC_room_join_result* other);

  // implements Message ----------------------------------------------

  SC_room_join_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_join_result& from);
  void MergeFrom(const SC_room_join_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::protocol::FailSignal failsignal() const;
  inline void set_failsignal(::protocol::FailSignal value);

  // @@protoc_insertion_point(class_scope:protocol.SC_room_join_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_room_join_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_room_leave_result : public ::google::protobuf::Message {
 public:
  SC_room_leave_result();
  virtual ~SC_room_leave_result();

  SC_room_leave_result(const SC_room_leave_result& from);

  inline SC_room_leave_result& operator=(const SC_room_leave_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_room_leave_result& default_instance();

  void Swap(SC_room_leave_result* other);

  // implements Message ----------------------------------------------

  SC_room_leave_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_room_leave_result& from);
  void MergeFrom(const SC_room_leave_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::protocol::FailSignal failsignal() const;
  inline void set_failsignal(::protocol::FailSignal value);

  // @@protoc_insertion_point(class_scope:protocol.SC_room_leave_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_room_leave_result* default_instance_;
};
// -------------------------------------------------------------------

class SC_ingame_start_result : public ::google::protobuf::Message {
 public:
  SC_ingame_start_result();
  virtual ~SC_ingame_start_result();

  SC_ingame_start_result(const SC_ingame_start_result& from);

  inline SC_ingame_start_result& operator=(const SC_ingame_start_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ingame_start_result& default_instance();

  void Swap(SC_ingame_start_result* other);

  // implements Message ----------------------------------------------

  SC_ingame_start_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_ingame_start_result& from);
  void MergeFrom(const SC_ingame_start_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.FailSignal failSignal = 1;
  inline bool has_failsignal() const;
  inline void clear_failsignal();
  static const int kFailSignalFieldNumber = 1;
  inline ::protocol::FailSignal failsignal() const;
  inline void set_failsignal(::protocol::FailSignal value);

  // @@protoc_insertion_point(class_scope:protocol.SC_ingame_start_result)
 private:
  inline void set_has_failsignal();
  inline void clear_has_failsignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int failsignal_;
  friend void  protobuf_AddDesc_RoomPacket_2eproto();
  friend void protobuf_AssignDesc_RoomPacket_2eproto();
  friend void protobuf_ShutdownFile_RoomPacket_2eproto();

  void InitAsDefaultInstance();
  static SC_ingame_start_result* default_instance_;
};
// ===================================================================


// ===================================================================

// RoomInfo

// optional uint32 roomNum = 1;
inline bool RoomInfo::has_roomnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_roomnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_roomnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_roomnum() {
  roomnum_ = 0u;
  clear_has_roomnum();
}
inline ::google::protobuf::uint32 RoomInfo::roomnum() const {
  // @@protoc_insertion_point(field_get:protocol.RoomInfo.roomNum)
  return roomnum_;
}
inline void RoomInfo::set_roomnum(::google::protobuf::uint32 value) {
  set_has_roomnum();
  roomnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.RoomInfo.roomNum)
}

// -------------------------------------------------------------------

// CS_contact_alram

// required string nickName = 1;
inline bool CS_contact_alram::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_contact_alram::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_contact_alram::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_contact_alram::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& CS_contact_alram::nickname() const {
  // @@protoc_insertion_point(field_get:protocol.CS_contact_alram.nickName)
  return *nickname_;
}
inline void CS_contact_alram::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.CS_contact_alram.nickName)
}
inline void CS_contact_alram::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.CS_contact_alram.nickName)
}
inline void CS_contact_alram::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.CS_contact_alram.nickName)
}
inline ::std::string* CS_contact_alram::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.CS_contact_alram.nickName)
  return nickname_;
}
inline ::std::string* CS_contact_alram::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CS_contact_alram::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.CS_contact_alram.nickName)
}

// optional string securityCode = 2;
inline bool CS_contact_alram::has_securitycode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_contact_alram::set_has_securitycode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_contact_alram::clear_has_securitycode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_contact_alram::clear_securitycode() {
  if (securitycode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    securitycode_->clear();
  }
  clear_has_securitycode();
}
inline const ::std::string& CS_contact_alram::securitycode() const {
  // @@protoc_insertion_point(field_get:protocol.CS_contact_alram.securityCode)
  return *securitycode_;
}
inline void CS_contact_alram::set_securitycode(const ::std::string& value) {
  set_has_securitycode();
  if (securitycode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    securitycode_ = new ::std::string;
  }
  securitycode_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.CS_contact_alram.securityCode)
}
inline void CS_contact_alram::set_securitycode(const char* value) {
  set_has_securitycode();
  if (securitycode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    securitycode_ = new ::std::string;
  }
  securitycode_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.CS_contact_alram.securityCode)
}
inline void CS_contact_alram::set_securitycode(const char* value, size_t size) {
  set_has_securitycode();
  if (securitycode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    securitycode_ = new ::std::string;
  }
  securitycode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.CS_contact_alram.securityCode)
}
inline ::std::string* CS_contact_alram::mutable_securitycode() {
  set_has_securitycode();
  if (securitycode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    securitycode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.CS_contact_alram.securityCode)
  return securitycode_;
}
inline ::std::string* CS_contact_alram::release_securitycode() {
  clear_has_securitycode();
  if (securitycode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = securitycode_;
    securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CS_contact_alram::set_allocated_securitycode(::std::string* securitycode) {
  if (securitycode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete securitycode_;
  }
  if (securitycode) {
    set_has_securitycode();
    securitycode_ = securitycode;
  } else {
    clear_has_securitycode();
    securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.CS_contact_alram.securityCode)
}

// -------------------------------------------------------------------

// CS_room_info_request

// -------------------------------------------------------------------

// CS_total_room_info_request

// -------------------------------------------------------------------

// CS_room_create

// optional uint32 roomNum = 1;
inline bool CS_room_create::has_roomnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_room_create::set_has_roomnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_room_create::clear_has_roomnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_room_create::clear_roomnum() {
  roomnum_ = 0u;
  clear_has_roomnum();
}
inline ::google::protobuf::uint32 CS_room_create::roomnum() const {
  // @@protoc_insertion_point(field_get:protocol.CS_room_create.roomNum)
  return roomnum_;
}
inline void CS_room_create::set_roomnum(::google::protobuf::uint32 value) {
  set_has_roomnum();
  roomnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.CS_room_create.roomNum)
}

// optional string id = 2;
inline bool CS_room_create::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_room_create::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_room_create::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_room_create::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& CS_room_create::id() const {
  // @@protoc_insertion_point(field_get:protocol.CS_room_create.id)
  return *id_;
}
inline void CS_room_create::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.CS_room_create.id)
}
inline void CS_room_create::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.CS_room_create.id)
}
inline void CS_room_create::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.CS_room_create.id)
}
inline ::std::string* CS_room_create::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.CS_room_create.id)
  return id_;
}
inline ::std::string* CS_room_create::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CS_room_create::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.CS_room_create.id)
}

// -------------------------------------------------------------------

// CS_room_join

// optional uint32 roomNum = 1;
inline bool CS_room_join::has_roomnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_room_join::set_has_roomnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_room_join::clear_has_roomnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_room_join::clear_roomnum() {
  roomnum_ = 0u;
  clear_has_roomnum();
}
inline ::google::protobuf::uint32 CS_room_join::roomnum() const {
  // @@protoc_insertion_point(field_get:protocol.CS_room_join.roomNum)
  return roomnum_;
}
inline void CS_room_join::set_roomnum(::google::protobuf::uint32 value) {
  set_has_roomnum();
  roomnum_ = value;
  // @@protoc_insertion_point(field_set:protocol.CS_room_join.roomNum)
}

// -------------------------------------------------------------------

// CS_room_leave

// -------------------------------------------------------------------

// CS_request_ingame_start

// -------------------------------------------------------------------

// SC_contact_result

// optional .protocol.FailSignal failSignal = 1;
inline bool SC_contact_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_contact_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_contact_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_contact_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::protocol::FailSignal SC_contact_result::failsignal() const {
  // @@protoc_insertion_point(field_get:protocol.SC_contact_result.failSignal)
  return static_cast< ::protocol::FailSignal >(failsignal_);
}
inline void SC_contact_result::set_failsignal(::protocol::FailSignal value) {
  assert(::protocol::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:protocol.SC_contact_result.failSignal)
}

// -------------------------------------------------------------------

// SC_room_info

// repeated string playerNickNames = 1;
inline int SC_room_info::playernicknames_size() const {
  return playernicknames_.size();
}
inline void SC_room_info::clear_playernicknames() {
  playernicknames_.Clear();
}
inline const ::std::string& SC_room_info::playernicknames(int index) const {
  // @@protoc_insertion_point(field_get:protocol.SC_room_info.playerNickNames)
  return playernicknames_.Get(index);
}
inline ::std::string* SC_room_info::mutable_playernicknames(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.SC_room_info.playerNickNames)
  return playernicknames_.Mutable(index);
}
inline void SC_room_info::set_playernicknames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.SC_room_info.playerNickNames)
  playernicknames_.Mutable(index)->assign(value);
}
inline void SC_room_info::set_playernicknames(int index, const char* value) {
  playernicknames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.SC_room_info.playerNickNames)
}
inline void SC_room_info::set_playernicknames(int index, const char* value, size_t size) {
  playernicknames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.SC_room_info.playerNickNames)
}
inline ::std::string* SC_room_info::add_playernicknames() {
  return playernicknames_.Add();
}
inline void SC_room_info::add_playernicknames(const ::std::string& value) {
  playernicknames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.SC_room_info.playerNickNames)
}
inline void SC_room_info::add_playernicknames(const char* value) {
  playernicknames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.SC_room_info.playerNickNames)
}
inline void SC_room_info::add_playernicknames(const char* value, size_t size) {
  playernicknames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.SC_room_info.playerNickNames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SC_room_info::playernicknames() const {
  // @@protoc_insertion_point(field_list:protocol.SC_room_info.playerNickNames)
  return playernicknames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SC_room_info::mutable_playernicknames() {
  // @@protoc_insertion_point(field_mutable_list:protocol.SC_room_info.playerNickNames)
  return &playernicknames_;
}

// -------------------------------------------------------------------

// SC_total_room_info

// optional uint32 roomCount = 1;
inline bool SC_total_room_info::has_roomcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_total_room_info::set_has_roomcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_total_room_info::clear_has_roomcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_total_room_info::clear_roomcount() {
  roomcount_ = 0u;
  clear_has_roomcount();
}
inline ::google::protobuf::uint32 SC_total_room_info::roomcount() const {
  // @@protoc_insertion_point(field_get:protocol.SC_total_room_info.roomCount)
  return roomcount_;
}
inline void SC_total_room_info::set_roomcount(::google::protobuf::uint32 value) {
  set_has_roomcount();
  roomcount_ = value;
  // @@protoc_insertion_point(field_set:protocol.SC_total_room_info.roomCount)
}

// repeated .protocol.RoomInfo roomList = 2;
inline int SC_total_room_info::roomlist_size() const {
  return roomlist_.size();
}
inline void SC_total_room_info::clear_roomlist() {
  roomlist_.Clear();
}
inline const ::protocol::RoomInfo& SC_total_room_info::roomlist(int index) const {
  // @@protoc_insertion_point(field_get:protocol.SC_total_room_info.roomList)
  return roomlist_.Get(index);
}
inline ::protocol::RoomInfo* SC_total_room_info::mutable_roomlist(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.SC_total_room_info.roomList)
  return roomlist_.Mutable(index);
}
inline ::protocol::RoomInfo* SC_total_room_info::add_roomlist() {
  // @@protoc_insertion_point(field_add:protocol.SC_total_room_info.roomList)
  return roomlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::RoomInfo >&
SC_total_room_info::roomlist() const {
  // @@protoc_insertion_point(field_list:protocol.SC_total_room_info.roomList)
  return roomlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::RoomInfo >*
SC_total_room_info::mutable_roomlist() {
  // @@protoc_insertion_point(field_mutable_list:protocol.SC_total_room_info.roomList)
  return &roomlist_;
}

// -------------------------------------------------------------------

// SC_room_create_result

// optional .protocol.FailSignal failSignal = 1;
inline bool SC_room_create_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_room_create_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_room_create_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_room_create_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::protocol::FailSignal SC_room_create_result::failsignal() const {
  // @@protoc_insertion_point(field_get:protocol.SC_room_create_result.failSignal)
  return static_cast< ::protocol::FailSignal >(failsignal_);
}
inline void SC_room_create_result::set_failsignal(::protocol::FailSignal value) {
  assert(::protocol::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:protocol.SC_room_create_result.failSignal)
}

// -------------------------------------------------------------------

// SC_room_join_result

// optional .protocol.FailSignal failSignal = 1;
inline bool SC_room_join_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_room_join_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_room_join_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_room_join_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::protocol::FailSignal SC_room_join_result::failsignal() const {
  // @@protoc_insertion_point(field_get:protocol.SC_room_join_result.failSignal)
  return static_cast< ::protocol::FailSignal >(failsignal_);
}
inline void SC_room_join_result::set_failsignal(::protocol::FailSignal value) {
  assert(::protocol::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:protocol.SC_room_join_result.failSignal)
}

// -------------------------------------------------------------------

// SC_room_leave_result

// optional .protocol.FailSignal failSignal = 1;
inline bool SC_room_leave_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_room_leave_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_room_leave_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_room_leave_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::protocol::FailSignal SC_room_leave_result::failsignal() const {
  // @@protoc_insertion_point(field_get:protocol.SC_room_leave_result.failSignal)
  return static_cast< ::protocol::FailSignal >(failsignal_);
}
inline void SC_room_leave_result::set_failsignal(::protocol::FailSignal value) {
  assert(::protocol::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:protocol.SC_room_leave_result.failSignal)
}

// -------------------------------------------------------------------

// SC_ingame_start_result

// optional .protocol.FailSignal failSignal = 1;
inline bool SC_ingame_start_result::has_failsignal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ingame_start_result::set_has_failsignal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ingame_start_result::clear_has_failsignal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ingame_start_result::clear_failsignal() {
  failsignal_ = 0;
  clear_has_failsignal();
}
inline ::protocol::FailSignal SC_ingame_start_result::failsignal() const {
  // @@protoc_insertion_point(field_get:protocol.SC_ingame_start_result.failSignal)
  return static_cast< ::protocol::FailSignal >(failsignal_);
}
inline void SC_ingame_start_result::set_failsignal(::protocol::FailSignal value) {
  assert(::protocol::FailSignal_IsValid(value));
  set_has_failsignal();
  failsignal_ = value;
  // @@protoc_insertion_point(field_set:protocol.SC_ingame_start_result.failSignal)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoomPacket_2eproto__INCLUDED
